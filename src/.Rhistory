tidyr::drop_na() %>%
dplyr::filter(TaskType == "S") %>%
dplyr::mutate(Response = factor(Value, levels = c(1, 2, 3)),
Condition = as.factor(Condition),
Question = as.factor(Question),
ID = as.factor(ID)
)
CondDum_2m1 <- ifelse(dat_lmer$Condition == "2", "1", "0")
CondDum_3m1 <- ifelse(dat_lmer$Condition == "3", "1", "0")
dat_lmer_ud <- data.frame(dat_lmer, CondDum_2m1, CondDum_3m1)
#Compare metaphor vs (literal + otherwise)
RespDum_MaO <- ifelse(dat_lmer_ud$Response == "2", "1", "0")
dat_lmer_ud <- data.frame(dat_lmer_ud, RespDum_MaO = as.factor(RespDum_MaO))
res_lmer_MaO <- glmer(formula = RespDum_MaO ~ CondDum_2m1 + CondDum_3m1 + (1|ID) + (1|Question),
data = dat_lmer_ud,
family = binomial)
summary(res_lmer_MaO)
CondDum_3m2 <- ifelse(dat_lmer$Condition == "3", "1", "0")
CondDum_1m2 <- ifelse(dat_lmer$Condition == "1", "1", "0")
dat_lmer_ud <- data.frame(dat_lmer_ud, CondDum_3m2, CondDum_1m2)
res_lmer_MaO_2 <- glmer(formula = RespDum_MaO ~ CondDum_3m2 + CondDum_1m2 + (1|ID) + (1|Question),
data = dat_lmer_ud,
family = binomial)
summary(res_lmer_MaO_2)
dat_age
dat_sex
#最終更新：2020年12月6日 13時21分
library(tidyr)
library(dplyr)
library(lme4)
library(lmerTest)
library(ggplot2)
raw_dat <- read.csv("../data/exp1_sentence_paraphrasing_task.csv")
main_class_dat = dplyr::mutate(raw_dat,
Category = case_when(
分類後 %in% c("名詞直喩", "名詞隠喩") ~ "Nominal metaphorical",
分類後 == "字義" ~ "Literal",
分類後 %in% c("その他直喩", "その他隠喩", "それ以外") ~ "Others"
)
) %>%
dplyr::mutate(Category = as.factor(Category),
Condition = as.factor(Condition))
dat_main_class_count <- main_class_dat %>%
dplyr::group_by(Condition, Category) %>%
dplyr::summarise(Count = n())%>%
dplyr::mutate(Proportion = (Count)/1140)
dat_main_class_count$Category <- factor(dat_main_class_count$Category,
levels = c("Others", "Literal", "Nominal metaphorical"))
levels(dat_main_class_count$Condition) <- c("One", "Two", "Three")
ggplot()+theme_set(theme_classic(base_size = 16,base_family="Hiragino Mincho Pro W3"))
p <- ggplot(dat_main_class_count, aes(x = Condition, y = Proportion))
p <- p + geom_bar(stat = "identity", aes(fill = Category), colour = "black") +
scale_fill_manual(values = c("white", "gray", "black"))
p <- p + theme(axis.text.y = element_text(size=16),
#axis.title.x = element_blank(),
axis.text.x = element_text(size = 16))
p <- p + ylab("Proporotion of responses")
plot(p)
metaphor_class_dat = dplyr::mutate(raw_dat,
Category = case_when(
分類後 %in% c("名詞直喩", "名詞隠喩", "その他隠喩", "その他直喩") ~ "Metaphorical",
分類後 == "字義" ~ "Literal",
分類後 %in% c("それ以外") ~ "Otherwise"
)
) %>%
dplyr::mutate(Category = as.factor(Category),
Condition = as.factor(Condition))
dat_metaphor_class_count <- metaphor_class_dat %>%
dplyr::group_by(Condition, Category) %>%
dplyr::summarise(Count = n())%>%
dplyr::mutate(Proportion = (Count)/1140)
dat_metaphor_class_count$Category <- factor(dat_metaphor_class_count$Category,
levels = c("Otherwise", "Literal", "Metaphorical"))
levels(dat_metaphor_class_count$Condition) <- c("One", "Two", "Three")
#quartz(type = "pdf", file = "./p1_bar_graph_metaphorical_English.pdf")
ggplot()+theme_set(theme_classic(base_size = 16,base_family="Hiragino Mincho Pro W3"))
p <- ggplot(dat_metaphor_class_count, aes(x = Condition, y = Proportion))
p <- p + geom_bar(stat = "identity", aes(fill = Category), colour = "black") +
scale_fill_manual(values = c("white", "gray", "black"))
p <- p + theme(axis.text.y = element_text(size=16),
#axis.title.x = element_blank(),
axis.text.x = element_text(size = 16))
p <- p + ylab("Proporotion of responses")
plot(p)
#conduct linear mixed effect model
dat_lmer <- main_class_dat %>%
dplyr::mutate(ID = as.factor(ID))
CondDum_2m1 <- ifelse(dat_lmer$Condition == "2", "1", "0")
CondDum_3m1 <- ifelse(dat_lmer$Condition == "3", "1", "0")
dat_lmer_ud <- data.frame(dat_lmer, CondDum_2m1, CondDum_3m1)
RespDum_MaO <- ifelse(dat_lmer_ud$main_class == "1", "1", "0")
dat_lmer_ud <- data.frame(dat_lmer_ud, RespDum_MaO = as.factor(RespDum_MaO))
#結果：比喩1 vs (字義+その他)0
res_lmer_MaO <- glmer(formula = RespDum_MaO ~ CondDum_2m1 + CondDum_3m1 + (1|ID) + (1|Question),
data = dat_lmer_ud,
family = binomial)
summary(res_lmer_MaO)
#conduct linear mixed effect model
main_class_dat = dplyr::mutate(raw_dat,
main_class = case_when(
分類後 %in% c("名詞直喩", "名詞隠喩") ~ 1,
分類後 == "字義" ~ 2,
分類後 %in% c("その他直喩", "その他隠喩", "それ以外") ~ 3
)
) %>%
dplyr::mutate(main_class = as.factor(main_class),
Condition = as.factor(Condition))
#conduct linear mixed effect model
main_class_dat = dplyr::mutate(raw_dat,
main_class = case_when(
分類後 %in% c("名詞直喩", "名詞隠喩") ~ 1,
分類後 == "字義" ~ 2,
分類後 %in% c("その他直喩", "その他隠喩", "それ以外") ~ 3
)
) %>%
dplyr::mutate(main_class = as.factor(main_class),
Condition = as.factor(Condition))
dat_lmer <- main_class_dat %>%
dplyr::mutate(ID = as.factor(ID))
CondDum_2m1 <- ifelse(dat_lmer$Condition == "2", "1", "0")
CondDum_3m1 <- ifelse(dat_lmer$Condition == "3", "1", "0")
dat_lmer_ud <- data.frame(dat_lmer, CondDum_2m1, CondDum_3m1)
RespDum_MaO <- ifelse(dat_lmer_ud$main_class == "1", "1", "0")
dat_lmer_ud <- data.frame(dat_lmer_ud, RespDum_MaO = as.factor(RespDum_MaO))
res_lmer_MaO <- glmer(formula = RespDum_MaO ~ CondDum_2m1 + CondDum_3m1 + (1|ID) + (1|Question),
data = dat_lmer_ud,
family = binomial)
summary(res_lmer_MaO)
CondDum_3m2 <- ifelse(dat_lmer$Condition == "3", "1", "0")
CondDum_1m2 <- ifelse(dat_lmer$Condition == "1", "1", "0")
dat_lmer_ud <- data.frame(dat_lmer_ud, CondDum_3m2, CondDum_1m2)
res_lmer_MaO_2 <- glmer(formula = RespDum_MaO ~ CondDum_3m2 + CondDum_1m2 + (1|ID) + (1|Question),
data = dat_lmer_ud,
family = binomial)
summary(res_lmer_MaO_2)
#conduct linear mixed effect model (metaphorical)
metaphor_class_dat = dplyr::mutate(raw_dat,
metaphor_class = case_when(
分類後 %in% c("名詞直喩", "名詞隠喩", "その他直喩", "その他隠喩") ~ 1,
分類後 == "字義" ~ 2,
分類後 == "それ以外" ~ 3
)
) %>%
dplyr::mutate(metaphor_class = as.factor(metaphor_class),
Condition = as.factor(Condition))
#データの整形：比喩表現と回答した頻度をカウント
dat_metapohr_class_count <- metaphor_class_dat %>%
dplyr::group_by(Condition, metaphor_class) %>%
dplyr::summarise(Count = n())%>%
dplyr::mutate(Prop = (Count)/1140)
#conduct linear mixed effect model (metaphorical)
metaphor_class_dat = dplyr::mutate(raw_dat,
metaphor_class = case_when(
分類後 %in% c("名詞直喩", "名詞隠喩", "その他直喩", "その他隠喩") ~ 1,
分類後 == "字義" ~ 2,
分類後 == "それ以外" ~ 3
)
) %>%
dplyr::mutate(metaphor_class = as.factor(metaphor_class),
Condition = as.factor(Condition))
dat_metaphor_lmer <- metaphor_class_dat %>%
dplyr::mutate(ID = as.factor(ID))
CondDum_2m1 <- ifelse(dat_metaphor_lmer$Condition == "2", "1", "0")
CondDum_3m1 <- ifelse(dat_metaphor_lmer$Condition == "3", "1", "0")
dat_metaphor_lmer_ud <- data.frame(dat_metaphor_lmer, CondDum_2m1, CondDum_3m1)
#Responseについて：比喩(1)vs(字義+その他)
RespDum_MaO <- ifelse(dat_metaphor_lmer_ud$metaphor_class == "1", "1", "0")
dat_metaphor_lmer_ud <- data.frame(dat_metaphor_lmer_ud, RespDum_MaO = as.factor(RespDum_MaO))
#結果：比喩1 vs (字義+その他)0
res_lmer_metaphor_MaO <- glmer(formula = RespDum_MaO ~ CondDum_2m1 + CondDum_3m1 + (1|ID) + (1|Question),
data = dat_metaphor_lmer_ud,
family = binomial)
summary(res_lmer_metaphor_MaO)
CondDum_3m2 <- ifelse(dat_metaphor_lmer$Condition == "3", "1", "0")
CondDum_1m2 <- ifelse(dat_metaphor_lmer$Condition == "1", "1", "0")
dat_metaphor_lmer_ud <- data.frame(dat_metaphor_lmer_ud, CondDum_3m2, CondDum_1m2)
res_lmer_metaphor_MaO_2 <- glmer(formula = RespDum_MaO ~ CondDum_3m2 + CondDum_1m2 + (1|ID) + (1|Question),
data = dat_metaphor_lmer_ud,
family = binomial)
summary(res_lmer_metaphor_MaO_2)
#import libraries
library(tidyr)
library(dplyr)
library(lme4)
library(lmerTest)
library(ggplot2)
library(stringr)
#import libraries
library(tidyr)
library(dplyr)
library(lme4)
library(lmerTest)
library(ggplot2)
library(stringr)
#手を入れて動かした結果→p2_edit_with_block_rev.csv
#読み込む
raw_dat <- read.csv("../data/exp2_sentence_rating_task.csv")
selected_dat <- subset(raw_dat, subset = raw_dat$Block_Part!=0)
#年齢と性別を確認するためだけのデータの作成
dat_age <- selected_dat %>%
dplyr::select(Age)  %>%
summarise(m_age = mean(Age), sd_age = sd(Age), min_age = min(Age), max_age = max(Age))
dat_sex <- selected_dat %>%
dplyr::select(Sex) %>%
group_by(Sex) %>%
summarise(count = n())
dat_sex
dat_age
#import libraries
library(tidyr)
library(dplyr)
library(lme4)
library(lmerTest)
library(ggplot2)
library(stringr)
#手を入れて動かした結果→p2_edit_with_block_rev.csv
#読み込む
raw_dat <- read.csv("../data/exp2_sentence_rating_task.csv")
#年齢と性別を確認するためだけのデータの作成
dat_age <- raw_dat %>%
dplyr::select(Age)  %>%
summarise(m_age = mean(Age), sd_age = sd(Age), min_age = min(Age), max_age = max(Age))
dat_sex <- raw_dat %>%
dplyr::select(Sex) %>%
group_by(Sex) %>%
summarise(count = n())
dat_sex
#手を入れて動かした結果→p2_edit_with_block_rev.csv
#読み込む
raw_dat <- read.csv("../data/p2_edit_with_block_rev.csv")
selected_dat <- subset(raw_dat, subset = raw_dat$Block_Part!=0)
#年齢と性別を確認するためだけのデータの作成
dat_age <- selected_dat %>%
dplyr::select(Age)  %>%
summarise(m_age = mean(Age), sd_age = sd(Age), min_age = min(Age), max_age = max(Age))
dat_sex <- selected_dat %>%
dplyr::select(Sex) %>%
group_by(Sex) %>%
summarise(count = n())
dat_sex
dat_age
selected_dat <- subset(raw_dat, subset = raw_dat$Block_Part!=0)
write.csv(selected_dat, "../data/exp2_sentence_rating_task")
#import libraries
library(tidyr)
library(dplyr)
library(lme4)
library(lmerTest)
library(ggplot2)
library(stringr)
#手を入れて動かした結果→p2_edit_with_block_rev.csv
#読み込む
raw_dat <- read.csv("../data/exp2_sentence_rating_task.csv")
#年齢と性別を確認するためだけのデータの作成
dat_age <- raw_dat %>%
dplyr::select(Age)  %>%
summarise(m_age = mean(Age), sd_age = sd(Age), min_age = min(Age), max_age = max(Age))
dat_sex <- raw_dat %>%
dplyr::select(Sex) %>%
group_by(Sex) %>%
summarise(count = n())
dat_age
dat_sex
#条件の人数を確認→全ての条件19人
check_num <- raw_dat %>%
dplyr::select(Block_Part) %>%
group_by(Block_Part) %>%
summarise(count = n())
check_num
#create bar plot
dat_count_eng <- raw_dat %>%
dplyr::select(-P_ID, -Sex, -Age, -Participate) %>%
tidyr::gather(key = Questions, value = Value,
-ID) %>%
tidyr::separate(col = Questions, into = c("Question", "Order", "Condition", "TaskType")) %>%
tidyr::drop_na() %>%
dplyr::filter(TaskType == "S") %>%
dplyr::mutate(test = rep(1,nrow(.))) %>%
dplyr::mutate(Response = as.factor(Value)) %>%
dplyr::mutate(Condition = as.factor(Condition)) %>%
dplyr::group_by(Condition, Response) %>%
dplyr::summarise(Count = sum(test)) %>%
dplyr::mutate(Prop = (Count)/1140)
levels(dat_count_eng$Response) <- c("Literal", "Metaphorical", "Otherwise")
dat_count_eng$Response <- factor(dat_count_eng$Response, levels = c("Otherwise", "Literal", "Metaphorical"))
levels(dat_count_eng$Condition) <-  c("One", "Two", "Three")
ggplot()+theme_set(theme_classic(base_size = 16,base_family="Hiragino Mincho Pro W3"))
par(xpd = T, family = "Japan1")
p <- ggplot(dat_count_eng, aes(x = Condition, y = Prop))
p <- p + geom_bar(stat = "identity", aes(fill = Response), colour = "black") +
scale_fill_manual(values = c("white", "gray", "black"))
p <- p + theme(axis.text.y = element_text(size=16),
axis.text.x = element_text(size = 16))
p <- p + ylab("Proporotion of responses")
p
dat_lmer <- raw_dat %>%
dplyr::select(-P_ID, -Sex, -Age, -Participate) %>%
tidyr::gather(key = Questions, value = Value,
-ID) %>%
tidyr::separate(col = Questions, into = c("Question", "Order", "Condition", "TaskType")) %>%
dplyr::mutate(Value = as.factor(Value)) %>%
tidyr::drop_na() %>%
dplyr::filter(TaskType == "S") %>%
dplyr::mutate(Response = factor(Value, levels = c(1, 2, 3)),
Condition = as.factor(Condition),
Question = as.factor(Question),
ID = as.factor(ID)
)
CondDum_2m1 <- ifelse(dat_lmer$Condition == "2", "1", "0")
CondDum_3m1 <- ifelse(dat_lmer$Condition == "3", "1", "0")
dat_lmer_ud <- data.frame(dat_lmer, CondDum_2m1, CondDum_3m1)
RespDum_MaO <- ifelse(dat_lmer_ud$Response == "2", "1", "0")
dat_lmer_ud <- data.frame(dat_lmer_ud, RespDum_MaO = as.factor(RespDum_MaO))
res_lmer_MaO_compOrder <- glmer(formula = RespDum_MaO ~ Order + (1|ID) + (1|Question),
data = dat_lmer_ud,
family = binomial)
summary(res_lmer_MaO_compOrder)
res_lmer_MaO <- glmer(formula = RespDum_MaO ~ Order + CondDum_2m1 + CondDum_3m1 + (1|ID) + (1|Question),
data = dat_lmer_ud,
family = binomial)
summary(res_lmer_MaO)
#import libraries
library(tidyr)
library(dplyr)
library(lme4)
library(lmerTest)
library(ggplot2)
raw_dat <- read.csv("../data/exp2_sentence_paraphrase_task.csv")
#create bar plot (nominal metaphorical)
main_class_dat = dplyr::mutate(raw_dat,
Category = case_when(
分類後 %in% c("名詞直喩", "名詞隠喩") ~ "Nominal metaphorical",
分類後 == "字義" ~ "Literal",
分類後 %in% c("その他直喩", "その他隠喩", "それ以外") ~ "Others"
)
) %>%
dplyr::mutate(Category = as.factor(Category),
Condition = as.factor(Condition))
dat_main_class_count <- main_class_dat %>%
dplyr::group_by(Order, Condition, Category) %>%
dplyr::summarise(Count = n())%>%
dplyr::mutate(Proportion = (Count)/570)
dat_main_class_count$Category <- factor(dat_main_class_count$Category,
levels = c("Others", "Literal", "Nominal metaphorical"))
levels(dat_main_class_count$Condition) <- c("One", "Two", "Three")
ggplot()+theme_set(theme_classic(base_size = 16,base_family="Hiragino Mincho Pro W3"))
p <- ggplot(dat_main_class_count, aes(x = Condition, y = Proportion))
p <- p + geom_bar(stat = "identity", aes(fill = Category), colour = "black") +
scale_fill_manual(values = c("white", "gray", "black"))
p <- p + facet_wrap(~Order, ncol=1) + theme(strip.background = element_blank())
p <- p + theme(axis.text.y = element_text(size=16),
#axis.title.x = element_blank(),
axis.text.x = element_text(size = 16))
p <- p + ylab("Proporotion of responses")
plot(p)
ggplot()+theme_set(theme_classic(base_size = 16,base_family="Hiragino Mincho Pro W3"))
p <- ggplot(dat_main_class_count, aes(x = Condition, y = Proportion))
p <- p + geom_bar(stat = "identity", aes(fill = Category), colour = "black") +
scale_fill_manual(values = c("white", "gray", "black"))
#p <- p + facet_wrap(~Order, ncol=1) + theme(strip.background = element_blank())
p <- p + theme(axis.text.y = element_text(size=16),
#axis.title.x = element_blank(),
axis.text.x = element_text(size = 16))
p <- p + ylab("Proporotion of responses")
plot(p)
#dev.off()
ggplot()+theme_set(theme_classic(base_size = 16,base_family="Hiragino Mincho Pro W3"))
p <- ggplot(dat_main_class_count, aes(x = Condition, y = Proportion))
p <- p + geom_bar(stat = "identity", aes(fill = Category), colour = "black") +
scale_fill_manual(values = c("white", "gray", "black"))
p <- p + theme(axis.text.y = element_text(size=16),
#axis.title.x = element_blank(),
axis.text.x = element_text(size = 16))
p <- p + ylab("Proporotion of responses")
plot(p)
#create bar plot (nominal metaphorical)
main_class_dat = dplyr::mutate(raw_dat,
Category = case_when(
分類後 %in% c("名詞直喩", "名詞隠喩") ~ "Nominal metaphorical",
分類後 == "字義" ~ "Literal",
分類後 %in% c("その他直喩", "その他隠喩", "それ以外") ~ "Others"
)
) %>%
dplyr::mutate(Category = as.factor(Category),
Condition = as.factor(Condition))
dat_main_class_count <- main_class_dat %>%
dplyr::group_by(Condition, Category) %>%
dplyr::summarise(Count = n())%>%
dplyr::mutate(Proportion = (Count)/1140)
dat_main_class_count$Category <- factor(dat_main_class_count$Category,
levels = c("Others", "Literal", "Nominal metaphorical"))
levels(dat_main_class_count$Condition) <- c("One", "Two", "Three")
#quartz(type = "pdf", file = "./p2_bar_graph_noun_English_Order.pdf")
ggplot()+theme_set(theme_classic(base_size = 16,base_family="Hiragino Mincho Pro W3"))
p <- ggplot(dat_main_class_count, aes(x = Condition, y = Proportion))
p <- p + geom_bar(stat = "identity", aes(fill = Category), colour = "black") +
scale_fill_manual(values = c("white", "gray", "black"))
p <- p + theme(axis.text.y = element_text(size=16),
#axis.title.x = element_blank(),
axis.text.x = element_text(size = 16))
p <- p + ylab("Proporotion of responses")
plot(p)
#create bar plot (metaphorical)
metaphor_class_dat = dplyr::mutate(raw_dat,
Category = case_when(
分類後 %in% c("名詞直喩", "名詞隠喩", "その他隠喩", "その他直喩") ~ "Metaphorical",
分類後 == "字義" ~ "Literal",
分類後 %in% c("それ以外") ~ "Otherwise"
)
) %>%
dplyr::mutate(Category = as.factor(Category),
Condition = as.factor(Condition))
dat_metaphor_class_count <- metaphor_class_dat %>%
dplyr::group_by(Condition, Category) %>%
dplyr::summarise(Count = n())%>%
dplyr::mutate(Proportion = (Count)/1140)
dat_metaphor_class_count$Category <- factor(dat_metaphor_class_count$Category,
levels = c("Otherwise", "Literal", "Metaphorical"))
levels(dat_metaphor_class_count$Condition) <- c("One", "Two", "Three")
#quartz(type = "pdf", file = "./p2_bar_graph_metaphorical_English.pdf")
ggplot()+theme_set(theme_classic(base_size = 16,base_family="Hiragino Mincho Pro W3"))
p <- ggplot(dat_metaphor_class_count, aes(x = Condition, y = Proportion))
p <- p + geom_bar(stat = "identity", aes(fill = Category), colour = "black") +
scale_fill_manual(values = c("white", "gray", "black"))
p <- p + theme(axis.text.y = element_text(size=16),
axis.text.x = element_text(size = 16))
p <- p + ylab("Proporotion of responses")
plot(p)
#dev.off(
#conduct linear mixed effect model (nominal metaphorical)
main_class_dat = dplyr::mutate(raw_dat,
main_class = case_when(
分類後 %in% c("名詞直喩", "名詞隠喩") ~ 1,
分類後 == "字義" ~ 2,
分類後 %in% c("その他直喩", "その他隠喩", "それ以外") ~ 3
)
) %>%
dplyr::mutate(main_class = as.factor(main_class),
Condition = as.factor(Condition))
dat_lmer <- main_class_dat %>%
dplyr::mutate(ID = as.factor(ID))
CondDum_2m1 <- ifelse(dat_lmer$Condition == "2", "1", "0")
CondDum_3m1 <- ifelse(dat_lmer$Condition == "3", "1", "0")
dat_lmer_ud <- data.frame(dat_lmer, CondDum_2m1, CondDum_3m1)
RespDum_MaO <- ifelse(dat_lmer_ud$main_class == "1", "1", "0")
dat_lmer_ud <- data.frame(dat_lmer_ud, RespDum_MaO = as.factor(RespDum_MaO))
res_lmer_MmO_compOrder <- glmer(formula = RespDum_MaO ~ Order + (1|ID) + (1|Question),
data = dat_lmer_ud,
family = binomial)
summary(res_lmer_MmO_compOrder)
res_lmer_MaO <- glmer(formula = RespDum_MaO ~ Order + CondDum_2m1 + CondDum_3m1 + (1|ID) + (1|Question),
data = dat_lmer_ud,
family = binomial)
summary(res_lmer_MaO)
CondDum_3m2 <- ifelse(dat_lmer$Condition == "3", "1", "0")
CondDum_1m2 <- ifelse(dat_lmer$Condition == "1", "1", "0")
dat_lmer_ud <- data.frame(dat_lmer_ud, CondDum_3m2, CondDum_1m2)
res_lmer_MaO_2 <- glmer(formula = RespDum_MaO ~ Order + CondDum_3m2 + CondDum_1m2 + (1|ID) + (1|Question),
data = dat_lmer_ud,
family = binomial)
summary(res_lmer_MaO_2)
#conduct linear mixed effect model (metaphorical)
metaphor_class_dat = dplyr::mutate(raw_dat,
metaphor_class = case_when(
分類後 %in% c("名詞直喩", "名詞隠喩", "その他直喩", "その他隠喩") ~ 1,
分類後 == "字義" ~ 2,
分類後 == "それ以外" ~ 3
)
) %>%
dplyr::mutate(metaphor_class = as.factor(metaphor_class),
Condition = as.factor(Condition))
CondDum_2m1 <- ifelse(dat_metaphor_lmer$Condition == "2", "1", "0")
CondDum_3m1 <- ifelse(dat_metaphor_lmer$Condition == "3", "1", "0")
dat_metaphor_lmer_ud <- data.frame(dat_metaphor_lmer, CondDum_2m1, CondDum_3m1)
RespDum_MaO <- ifelse(dat_metaphor_lmer_ud$metaphor_class == "1", "1", "0")
dat_metaphor_lmer_ud <- data.frame(dat_metaphor_lmer_ud, RespDum_MaO = as.factor(RespDum_MaO))
res_lmer_metaphor_compOrder <- glmer(formula = RespDum_MaO ~ Order + (1|ID) + (1|Question),
data = dat_metaphor_lmer_ud,
family = binomial)
summary(res_lmer_metaphor_compOrder)
#conduct linear mixed effect model (metaphorical)
metaphor_class_dat = dplyr::mutate(raw_dat,
metaphor_class = case_when(
分類後 %in% c("名詞直喩", "名詞隠喩", "その他直喩", "その他隠喩") ~ 1,
分類後 == "字義" ~ 2,
分類後 == "それ以外" ~ 3
)
) %>%
dplyr::mutate(metaphor_class = as.factor(metaphor_class),
Condition = as.factor(Condition))
dat_metaphor_lmer <- metaphor_class_dat %>%
dplyr::mutate(ID = as.factor(ID))
CondDum_2m1 <- ifelse(dat_metaphor_lmer$Condition == "2", "1", "0")
CondDum_3m1 <- ifelse(dat_metaphor_lmer$Condition == "3", "1", "0")
dat_metaphor_lmer_ud <- data.frame(dat_metaphor_lmer, CondDum_2m1, CondDum_3m1)
RespDum_MaO <- ifelse(dat_metaphor_lmer_ud$metaphor_class == "1", "1", "0")
dat_metaphor_lmer_ud <- data.frame(dat_metaphor_lmer_ud, RespDum_MaO = as.factor(RespDum_MaO))
res_lmer_metaphor_compOrder <- glmer(formula = RespDum_MaO ~ Order + (1|ID) + (1|Question),
data = dat_metaphor_lmer_ud,
family = binomial)
summary(res_lmer_metaphor_compOrder)
res_lmer_metaphor_MaO <- glmer(formula = RespDum_MaO ~ Order + CondDum_2m1 + CondDum_3m1 + (1|ID) + (1|Question),
data = dat_metaphor_lmer_ud,
family = binomial)
summary(res_lmer_metaphor_MaO)
CondDum_3m2 <- ifelse(dat_metaphor_lmer$Condition == "3", "1", "0")
CondDum_1m2 <- ifelse(dat_metaphor_lmer$Condition == "1", "1", "0")
dat_metaphor_lmer_ud <- data.frame(dat_metaphor_lmer_ud, CondDum_3m2, CondDum_1m2)
res_lmer_metaphor_MaO_2 <- glmer(formula = RespDum_MaO ~ Order + CondDum_3m2 + CondDum_1m2 + (1|ID) + (1|Question),
data = dat_metaphor_lmer_ud,
family = binomial)
summary(res_lmer_metaphor_MaO_2)
